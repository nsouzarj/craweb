events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml;
    
    server {
        listen 80;
        server_name localhost;
        
        # Serve static files
        root /usr/share/nginx/html;
        index index.html;
        
        # Proxy API requests to the backend service
        location /cra-api/ {
            # Use resolver to dynamically resolve the backend service
            resolver 127.0.0.11 valid=30s;
            set $backend "http://backend:8080";
            proxy_pass $backend/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Handle backend not available
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Return error page if backend is down
            proxy_intercept_errors on;
            error_page 502 503 504 = @backend_error;
        }
        
        location @backend_error {
            default_type text/html;
            return 503 "<html><body><h2>Service temporarily unavailable</h2><p>The backend service is currently not available. Please try again later.</p></body></html>";
        }
        
        # Always serve index.html for single page applications
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
}